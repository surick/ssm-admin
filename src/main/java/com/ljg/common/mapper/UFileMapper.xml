<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ljg.common.dao.UFileMapper" >
    <resultMap id="BaseResultMap" type="com.ljg.common.model.UFile" >
        <id column="fid" property="fid" jdbcType="BIGINT" />
        <result column="mid" property="mid" jdbcType="BIGINT" />
        <result column="fnum" property="fnum" jdbcType="VARCHAR" />
        <result column="fname" property="fname" jdbcType="VARCHAR" />
        <result column="fver" property="fver" jdbcType="VARCHAR" />
        <result column="fuser" property="fuser" jdbcType="VARCHAR" />
        <result column="fpath" property="fpath" jdbcType="VARCHAR" />
        <result column="file" property="file" jdbcType="BLOB" />
        <result column="ftime" property="ftime" jdbcType="TIMESTAMP" />
        <result column="mname" property="mname" jdbcType="VARCHAR" />
        <result column="gname" property="gname" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        fid,mid,fnum,fname,fver,fuser,fpath,ftime
    </sql>
    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            f.mid=m.mid and m.gid = g.gid
            <if test="findContent != null and findContent !='' " >
                and (
                LOWER(fname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
                LOWER(fuser) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
                )
            </if>
        </where>
    </sql>
    <sql id="where_all2">
        <where>
            <if test="findContent != null and findContent !='' " >
                and (
                LOWER(fname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
                LOWER(fuser) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
                )
            </if>
        </where>
    </sql>
    <select id="findAll" resultMap="BaseResultMap" >
        select
        fid,f.mid,fnum,fname,fver,fuser,fpath,ftime,mname,gname
        from sop_file f,sop_model m,sop_group g
        <include refid="where_all"/>
        <include refid="limit_sql" />
    </select>
    <select id="findCount" resultMap="BaseResultMap" >
        select count(fid) from sop_file
        <include refid="where_all2" />
    </select>

    <insert id="addFile" useGeneratedKeys="true" keyProperty="id" parameterType="com.ljg.common.model.UFile" >
        insert into sop_file (mid, fnum, fname,fver,fuser,fpath,file,ftime)
        values (#{mid,jdbcType=BIGINT}, #{fnum,jdbcType=VARCHAR}, #{fname,jdbcType=VARCHAR}, #{fver,jdbcType=VARCHAR},
             #{fuser,jdbcType=VARCHAR}, #{fpath,jdbcType=VARCHAR}, #{file,jdbcType=BLOB,typeHandler=org.apache.ibatis.type.BlobTypeHandler}, #{ftime,jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteFileByFid" parameterType="java.lang.Long" >
        delete from sop_file
        where fid = #{fid,jdbcType=BIGINT}
    </delete>
    <update id="updateFile" parameterType="com.ljg.common.model.UFile">
        update sop_file
        set mid = #{mid,jdbcType=BIGINT},
            fnum =  #{fnum,jdbcType=VARCHAR},
            fname = #{fname,jdbcType=VARCHAR},
            fver = #{fver,jdbcType=VARCHAR},
            fuser = #{fuser,jdbcType=VARCHAR},
            fpath = #{fpath,jdbcType=VARCHAR},
            file = #{file,jdbcType=BLOB,typeHandler=org.apache.ibatis.type.BlobTypeHandler},
            ftime = #{ftime,jdbcType=TIMESTAMP}
        where fid = #{fid,jdbcType=BIGINT}
    </update>
</mapper>
